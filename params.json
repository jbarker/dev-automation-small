{"name":"dev-automation-small","tagline":"From the talk \"Automation in the Small: Code to Cloud\"","body":"# dev-automation-small\r\n\r\n*Developer automation in the small.*\r\n\r\nAn example of integrated tools for machine configuration, local software\r\ndevelopment, and deployment to a cloud hosting provider.\r\n\r\n## Overview\r\n\r\n* Operating System: [Debian Wheezy][wheezy] 7.x AMD64\r\n* System definition: [Packer][packer]\r\n   * Builders\r\n     * [VirtualBox][packer_virtualbox]\r\n   * Provisioners\r\n     * [Ansible][packer_ansible]\r\n\r\n[wheezy]: https://www.debian.org/releases/wheezy/\r\n\r\n[packer]: http://www.packer.io/\r\n\r\n[packer_virtualbox]: http://www.packer.io/docs/builders/virtualbox.html\r\n\r\n[packer_digitalocean]: http://www.packer.io/docs/builders/digitalocean.html\r\n\r\n[packer_ansible]: http://www.packer.io/docs/provisioners/ansible-local.html\r\n\r\n\r\n## Setup on a Mac\r\n\r\nYou may run `setup-mac.sh` to install the required tools on a Mac.\r\n\r\n     $ ./setup-mac.sh\r\n\r\nThis example has been created & verified on Mac OS X 10.9.x.\r\n\r\n\r\n## Configuring your SSH public key\r\n\r\nYou must update the script at `/packer/scripts/common/publickey.sh` to copy\r\nyour public key. This will allow Ansible to access your machines. Without this\r\nchange Ansible will attempt to use the default public key, and you will not be\r\nable to access your machines.\r\n\r\nYou must also update your local SSH configuration. In your local file\r\n`~/.ssh/config` add an entry that tells SSH to use your private key when\r\nconnecting to your virtual machine:\r\n\r\n    Host localhost\r\n    HostName localhost\r\n    Port 3022\r\n    IdentitiesOnly yes\r\n    IdentityFile ~/.ssh/id_rsa\r\n    TCPKeepAlive yes\r\n    User packer\r\n\r\nYou should edit the above line `IdentityFile ~/.ssh/id_rsa` so that the file path is your private key that matches your public key configured in the script at `/packer/scripts/common/publickey.sh`.\r\n\r\n\r\n## Build a machine for VirtualBox\r\n\r\nUse `packer` to configure machines. First, confirm the packer template file is valid.\r\n\r\n    $ cd packer\r\n    $ packer validate debian-7.x-amd64.json\r\n    Template validated successfully.\r\n\r\nBuild with `virtualbox-iso` to configure local machines for development use.\r\n\r\n    $ packer build -only=virtualbox-iso -force debian-7.x-amd64.json\r\n\r\n\r\n## Run a machine with VirtualBox\r\n\r\nYou may run the machine with VirtualBox. First, import the newly built machine:\r\n\r\n     $ cd packer\r\n     $ ./vm-import.sh\r\n\r\nThen, run the virtual machine:\r\n\r\n     $ ./vm-start.sh\r\n\r\nThe virtual machine will run in headless mode, no UI should be visible.\r\n\r\n\r\n## Configure a machine with Ansible\r\n\r\nUse `ansible` for configuration management of machines.\r\n\r\nWhen your machines are running, you may connect to them via SSH and configure\r\nthem with Ansible.\r\n\r\nYou may setup your machines with the command:\r\n\r\n    $ cd ansible\r\n    $ ansible -i inventory.ini all -m setup -vvvv\r\n\r\nYou may ping your machines with the command:\r\n\r\n    $ ansible -i inventory.ini all -m ping\r\n\r\n\r\n## Related\r\n\r\n* Presentation from [ebay tech talk Berlin][meetup] (21 August 2014)\r\n  * PDF: under the `doc` directory\r\n  * Sharing: at [SlideShare][slideshare]\r\n* [Blog post][blog] at jbarker.com\r\n\r\n\r\n## Resources\r\n\r\n* [Bento][bento] by OpsCode\r\n\r\n\r\n[bento]: https://opscode.github.io/bento/\r\n[meetup]: http://meetu.ps/2vCs1K\r\n[slideshare]: http://www.slideshare.net/jbrkr/automation-smallcodeclouddevops\r\n[blog]: http://www.jbarker.com/blog/2014/ebay-berlin-devops-cloud\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}